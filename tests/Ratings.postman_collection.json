{
	"info": {
		"_postman_id": "8a15a225-461c-41d6-b02f-8e7a48410cfe",
		"name": "Ratings",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33777678"
	},
	"item": [
		{
			"name": "all ratings",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// ✅ Test successful retrieval of ratings list",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is application/json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    const contentType = pm.response.headers.get(\"Content-Type\");",
							"    pm.expect(contentType).to.match(/^application\\/json\\b/);",
							"});",
							"",
							"pm.test(\"Response contains 'ratings' array\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"data\").that.is.an(\"array\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/ratings",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ratings"
					]
				}
			},
			"response": []
		},
		{
			"name": "all ratings invalid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// ✅ Test failure retrieving ratings with invalid query parameters (if applicable)",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Content-Type is application/json\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"    const contentType = pm.response.headers.get(\"Content-Type\");",
							"    pm.expect(contentType).to.match(/^application\\/json\\b/);",
							"});",
							"",
							"pm.test(\"Response contains error messages\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"errors\");",
							"    pm.expect(jsonData.errors).to.be.an(\"array\").that.is.not.empty;",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/ratings?page=abc",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ratings"
					],
					"query": [
						{
							"key": "page",
							"value": "abc"
						}
					]
				}
			},
			"response": []
		}
	]
}